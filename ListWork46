#include <iostream>
using namespace std;

struct Node {
    int x;
    Node* next;
    Node* prev;
};
typedef Node* PNode;


void Add(PNode& Head, PNode& Tail, int data) {
    	PNode Temp;
    	if (Head == nullptr) {
    		Head = new Node;
    		Tail = Head;
    		Head->next = nullptr;
    	}
    	else {
    		Temp = new Node;
    		Tail->next = Temp;
    		Tail = Temp;
    		Tail->next = nullptr;
    	}
    	Tail->x = data;
    }


PNode Barrier(PNode& P1, PNode& P2) {
    PNode barrier = new Node;
    barrier->x = 0;

    if (P1 == nullptr) {
        barrier->next = barrier;
        barrier->prev = barrier;
    }
    else {
        P1->prev = barrier;
        P2->next = barrier;
        barrier->next = P1;
        barrier->prev = P2;
    }
   
    P1 = P2 = barrier;

    return barrier;
}


void ShowList(PNode& Head, int value) {
    PNode current;
    current = Head;
    int count = 0;
    while (count != value + 1 ) {
        cout << current->x << " ";
        current = current->next;
        count++;

    }
    cout << endl;
}


int main() {
    setlocale(LC_ALL, "russian");
    PNode P1 = nullptr;
    PNode P2 = nullptr;
    int list;
    cout << "Введите количество элементов в списке: ";
    cin >> list;
    for (int i = 0; i < list; i++) {
        int element;
        cout << "Введите " << i + 1 << " элемент списка ";
        cin >> element;
        Add(P1, P2, element);
    }

    PNode barrierElement = Barrier(P1, P2);
    cout << "Указатель на барьерный элемент: " << barrierElement << endl;
    cout << "Список: ";
    ShowList(P1, list);

}
